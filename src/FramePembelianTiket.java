import java.sql.*;
import javax.swing.*;
import java.awt.*;
import java.text.SimpleDateFormat;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * Kelas FramePembelianTiket adalah form GUI untuk pembelian tiket destinasi wisata
 * 
 * Fitur utama:
 * - Menampilkan detail destinasi wisata (nama, alamat, gambar, harga, dll)
 * - Memungkinkan pengguna memilih jumlah tiket dan tanggal kunjungan
 * - Menghitung total harga secara otomatis
 * - Menyimpan data pemesanan ke database
 * - Navigasi ke halaman pembayaran setelah pemesanan
 * 
 * @author tim F.N.M Trip
 */
public class FramePembelianTiket extends javax.swing.JFrame {
    
    /** 
     * Variabel untuk menyimpan nama file gambar destinasi dari database
     * Digunakan saat melakukan pemesanan dan diteruskan ke halaman pembayaran
     */
    private String namaGambarDariDatabase;
    
    /**
     * Konstruktor default untuk membuat form pembelian tiket
     * Menginisialisasi komponen GUI dan menampilkan destinasi dengan ID = 1
     */
    public FramePembelianTiket() {
        initComponents();
        setResizable(false);              // Form tidak dapat diubah ukurannya
        setLocationRelativeTo(null);      // Posisi form di tengah layar
        jumlahDipesan.setText("0");       // Set jumlah tiket awal = 0
        tampilDestinasi(1);               // Tampilkan destinasi dengan ID 1
        updateTotalHarga();               // Hitung total harga awa
        
    }

    /**
     * Konstruktor dengan parameter untuk menampilkan destinasi tertentu
     * 
     * @param idDestinasi ID destinasi yang akan ditampilkan
     */
    public FramePembelianTiket(int idDestinasi) {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        tampilDestinasi(idDestinasi);     // Tampilkan destinasi sesuai ID yang diberikan
    }  

    /**
     * Method untuk menampilkan detail destinasi berdasarkan ID
     * Mengambil data dari database dan menampilkannya di form
     * 
     * @param idDestinasi ID destinasi yang akan ditampilkan
     */
    public void tampilDestinasi(int idDestinasi) {
        try {
            // Membuka koneksi ke database
            Connection conn = Koneksi.getConnection(); // pastikan class Koneksi kamu benar
            
            // Query untuk mengambil data destinasi berdasarkan ID
            String sql = "SELECT * FROM destinasi WHERE id_destinasi = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, idDestinasi);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                // Mengisi label dengan data dari database
                lblNama.setText(rs.getString("nama"));
                lblAlamat.setText(rs.getString("alamat"));
                lblJamBuka.setText("Jam buka: " + rs.getString("jambuka"));
                lblDeskripsi.setText("<html><body style='width:250px'>" + rs.getString("deskripsi") + "</body></html>");
                
                // Format harga dengan format mata uang Indonesia
                int harga = rs.getInt("harga");
                String hargaFormatted = String.format("Rp %,d", harga).replace(",", ".") + ",00";
                lblHarga.setText(hargaFormatted);



                // Mengatur gambar destinasi
                String namaGambar = rs.getString("gambar");
                ImageIcon icon = new ImageIcon(getClass().getResource("/resources/Foto Destinasi/" + namaGambar));
                
                // Resize gambar sesuai ukuran label
                Image img = icon.getImage().getScaledInstance(lblGambar.getWidth(), lblGambar.getHeight(), Image.SCALE_SMOOTH);
                lblGambar.setIcon(new ImageIcon(img));
                namaGambarDariDatabase = namaGambar; // Simpan nama gambar untuk digunakan nanti
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal load data: " + e.getMessage());
        }
}


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblGambar = new javax.swing.JLabel();
        lblNama = new javax.swing.JLabel();
        lblAlamat = new javax.swing.JLabel();
        lblJamBuka = new javax.swing.JLabel();
        lblDeskripsi = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        tombolMinus = new javax.swing.JButton();
        tombolPlus = new javax.swing.JButton();
        jumlahDipesan = new javax.swing.JTextField();
        updateTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tripnesia - Pemesanan Tiket");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akun", "Profil", "Keluar" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 22, -1, 30));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Beranda");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 73, 100, 30));

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Syarat dan Ketentuan");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 276, -1, 20));

        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Tidak bisa reschedule");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, -1, -1));

        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Tidak bisa refund");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, -1, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("Harga Total:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 80, -1));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 250, -1));

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Pesan Sekarang");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 370, 130, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Harga /PAX:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));
        getContentPane().add(lblGambar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 280, 160));

        lblNama.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(lblNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 100, 20));

        lblAlamat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(lblAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 220, -1));

        lblJamBuka.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        getContentPane().add(lblJamBuka, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 220, -1));

        lblDeskripsi.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        lblDeskripsi.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(lblDeskripsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 280, 40));

        lblHarga.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHarga.setForeground(new java.awt.Color(255, 153, 0));
        getContentPane().add(lblHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 180, 40));

        tombolMinus.setText("-");
        tombolMinus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        tombolMinus.setContentAreaFilled(false);
        tombolMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolMinusActionPerformed(evt);
            }
        });
        getContentPane().add(tombolMinus, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 20, 20));

        tombolPlus.setText("+");
        tombolPlus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        tombolPlus.setContentAreaFilled(false);
        tombolPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolPlusActionPerformed(evt);
            }
        });
        getContentPane().add(tombolPlus, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 20, 20));

        jumlahDipesan.setEditable(false);
        jumlahDipesan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jumlahDipesan.setText("0");
        jumlahDipesan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        jumlahDipesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahDipesanActionPerformed(evt);
            }
        });
        getContentPane().add(jumlahDipesan, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 30, -1));

        updateTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateTotal.setForeground(new java.awt.Color(255, 153, 51));
        getContentPane().add(updateTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 140, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/alarm_16dp_000000_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 20, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/distance_16dp_000000_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 20, 20));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/currency_exchange_27dp_FFFFFF_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setMaximumSize(new java.awt.Dimension(27, 27));
        jButton5.setMinimumSize(new java.awt.Dimension(27, 27));
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 23, 40, 30));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kategori", "Destinasi Candi & Pura", "Destinasi Danau & Kepulauan", "Destinasi Gunung", "Destinasi Kawah", "Destinasi Pantai", "Destinasi Museum", "Destinasi Wisata Kota & Budaya", "Destinasi Wisata Alam & Satwa", "Destinasi Wisata Buatan (Taman Hiburan)" }));
        jComboBox2.setMinimumSize(new java.awt.Dimension(72, 24));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 73, 167, 28));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Tampilan Pembelian Tiket User FINAL BANGET.png"))); // NOI18N
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Event handler untuk tombol "Pesan Sekarang"
     * Memvalidasi input, menyimpan data pemesanan ke database,
     * dan membuka halaman pembayaran
     * 
     * @param evt Event yang dipicu saat tombol diklik
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // Validasi jumlah tiket
            String jumlahStr = jumlahDipesan.getText().trim();
            if (jumlahStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Jumlah pax tidak boleh kosong!");
                return;
            }

            int jumlah;
            try {
                jumlah = Integer.parseInt(jumlahStr);
                if (jumlah <= 0) {
                    JOptionPane.showMessageDialog(this, "Jumlah pax harus lebih dari 0!");
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Jumlah pax harus berupa angka!");
                return;
            }
            
            // Validasi tanggal kunjungan
            if (jDateChooser1.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Tanggal kunjungan tidak boleh kosong!");
                return;
            }

            // Mengambil total harga dan data lainnya
            String totalStr = updateTotal.getText().replace("Rp", "").replace(".", "").replace(",00", "").trim();
            int totalHarga = Integer.parseInt(totalStr);
            String namaGambar = namaGambarDariDatabase;
            
            // Konversi tanggal ke format SQL
            java.util.Date tanggalJava = jDateChooser1.getDate();
            java.sql.Date sqlDate = new java.sql.Date(tanggalJava.getTime());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggal = sdf.format(tanggalJava);


            // Mengambil ID destinasi dari database berdasarkan nama
            Connection conn = Koneksi.getConnection();
            String sqlDestinasi = "SELECT id_destinasi FROM destinasi WHERE nama = ?";
            PreparedStatement pstDestinasi = conn.prepareStatement(sqlDestinasi);
            pstDestinasi.setString(1, lblNama.getText());
            ResultSet rs = pstDestinasi.executeQuery();
            int idDestinasi = 0;
            if (rs.next()) {
                idDestinasi = rs.getInt("id_destinasi");
            }

            // Menyimpan data pemesanan ke database
            String insert = "INSERT INTO pemesanan (id_user, id_destinasi, paxPemesanan, tanggalPemesanan, hargaPemesanan, status) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(insert);
                        
            pst.setInt(1, 1); //Ganti dengan ID user yang sedang login
            pst.setInt(2, idDestinasi);
            pst.setInt(3, jumlah);
            pst.setDate(4, sqlDate);
            pst.setInt(5, totalHarga);
            pst.setString(6, "Tertunda"); // status default

            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Tiket berhasil dipesan!");

            // Membuka halaman pembayaran dengan data pemesanan
            FramePembayaranTiket pembayaran = new FramePembayaranTiket(
                lblNama.getText(),
                namaGambar,
                tanggal,
                jumlah,
                totalHarga
            );
            pembayaran.setVisible(true);
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memesan tiket: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Event handler untuk tombol minus (-)
     * Mengurangi jumlah tiket yang dipesan dan mengupdate total harga
     * 
     * @param evt Event yang dipicu saat tombol diklik
     */
    private void tombolMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolMinusActionPerformed
        // TODO add your handling code here:
        
        int val = Integer.parseInt(jumlahDipesan.getText());
        if (val > 0) { // Memastikan jumlah tidak negatif
            jumlahDipesan.setText(String.valueOf(val - 1));
            updateTotalHarga(); // Update total harga setelah perubahan
        }

    }//GEN-LAST:event_tombolMinusActionPerformed

    
    /**
     * Event handler untuk tombol plus (+)
     * Menambah jumlah tiket yang dipesan dan mengupdate total harga
     * 
     * @param evt Event yang dipicu saat tombol diklik
     */
    private void tombolPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolPlusActionPerformed
        // TODO add your handling code here:
        int val = Integer.parseInt(jumlahDipesan.getText());
        jumlahDipesan.setText(String.valueOf(val + 1));
        updateTotalHarga();
    }//GEN-LAST:event_tombolPlusActionPerformed

    
    /**
     * Event handler untuk tombol "Beranda"
     * Menutup form ini dan membuka halaman beranda
     * 
     * @param evt Event yang dipicu saat tombol diklik
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new FrameBeranda().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    
    /**
     * Event handler untuk ComboBox kategori destinasi
     * Navigasi ke halaman kategori sesuai pilihan pengguna
     * 
     * @param evt Event yang dipicu saat pilihan berubah
     */
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String kategoriDipilih = jComboBox2.getSelectedItem().toString();
        if(kategoriDipilih.equals("Destinasi Candi & Pura")){
            new FrameKategoriCandiPura().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Danau & Kepulauan")){
            new FrameKategoriDanauPulau().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Gunung")){
            new FrameKategoriGunung().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Kawah")){
            new FrameKategoriKawah().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Pantai")){
            new FrameKategoriPantai().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Museum")){
            new FrameKategoriMuseum().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Wisata Kota & Budaya")){
            new FrameKategoriWisataKotaBudaya().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Wisata Alam & Satwa")){
            new FrameKategoriWisataAlamSatwa().setVisible(true);
            dispose();
        }
        if(kategoriDipilih.equals("Destinasi Wisata Buatan (Taman Hiburan)")){
            new FrameKategoriWisataBuatan().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jumlahDipesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahDipesanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahDipesanActionPerformed

    /**
     * Method untuk mengupdate total harga berdasarkan jumlah tiket
     * Mengambil harga dari label, mengalikan dengan jumlah tiket,
     * dan menampilkan hasil dalam format mata uang Indonesia
     */
    private void updateTotalHarga() {
    try {
        // Ambil teks dari lblHarga, misalnya "Rp 375000,00" menjadi 375000
        String hargaText = lblHarga.getText()
                .replace("Rp", "")      // Hapus "Rp"
                .replace(".", "")       // Hapus titik ribuan
                .replace(",00", "")     // Hapus koma desimal
                .trim();

        int harga = Integer.parseInt(hargaText); // sekarang aman
        int jumlah = Integer.parseInt(jumlahDipesan.getText());

        int total = harga * jumlah; // Hitung total harga

        // Format hasil total ke "Rp xxx.xxx,00"
        String totalFormatted = String.format("Rp %,d", total).replace(",", ".") + ",00";
        updateTotal.setText(totalFormatted);

    } catch (Exception e) {
        updateTotal.setText("Rp 0,00"); // Jika error, set total ke 0
        System.err.println("Gagal menghitung total: " + e.getMessage());
    }

}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePembelianTiket().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jumlahDipesan;
    private javax.swing.JLabel lblAlamat;
    private javax.swing.JLabel lblDeskripsi;
    private javax.swing.JLabel lblGambar;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblJamBuka;
    private javax.swing.JLabel lblNama;
    private javax.swing.JButton tombolMinus;
    private javax.swing.JButton tombolPlus;
    private javax.swing.JLabel updateTotal;
    // End of variables declaration//GEN-END:variables
}
