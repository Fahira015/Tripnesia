import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * FormAdminAkun adalah JFrame yang digunakan untuk menampilkan dan mengelola
 * informasi akun admin dalam aplikasi Tripnesia. Form ini memungkinkan admin
 * melihat dan mengubah email dan kata sandi mereka.
 * 
 * Fitur utama:
 * - Menampilkan data akun admin berdasarkan id_user tetap (9).
 * - Memungkinkan perubahan data email dan password dengan validasi.
 * - Navigasi ke form admin lainnya: Beranda, Kelola Data, Destinasi, Laporan, dan Logout.
 * 
 * @author USER
 */
public class FormAdminAkun extends FormBaseAdmin implements SetJudulForm {

    /**
     * Interface untuk validasi input data.
     * Menyediakan kontrak untuk implementasi berbagai jenis validator.
     */
    interface Validator {
        
        /**
         * Memvalidasi nilai input.
         * 
         * @param value nilai yang akan divalidasi
         * @return true jika valid, false jika tidak valid
         */
        boolean isValid(String value);
    }
    
    /**
     * Kelas yang digunakan untuk validasi input.
     * Berisi kelas nested untuk validasi email.
     */
    public class ValidatorUtil {
        
        /**
         * Validator email sederhana.
         * Memastikan bahwa input mengandung karakter "@".
         */
        class EmailValidator {
            
            /**
             * Memvalidasi apakah email mengandung karakter "@".
             * 
             * @param email email yang akan divalidasi
             * @return true jika valid, false jika tidak
             */
            public boolean isValid(String email) {
                return email != null && email.contains("@");
            }
        }
    }
    
    
    /**
     * 
     * Mengatur judul form sesuai dengan parameter yang diberikan.
     * Implementasi dari interface SetJudulForm.
     * 
     * @param judul string judul yang akan ditampilkan pada form 
     */
    @Override
    public void setJudul(String judul) {
        setTitle(judul); 
    }

    /**
     * Konstruktor FormAdminAkun.
     * Menginisialisasi komponen GUI, mengatur form agar tidak dapat di-resize,
     * menempatkan form di tengah layar, dan memuat data admin dari database.
     */
    public FormAdminAkun() {
        initComponents();
        loadAdminData();
        setJudul("Tripnesia - Dashboard Admin - Akun", true); 
        logJudul("Tripnesia - Dashboard Admin - Akun");
    }
    
    /**
    * Memuat data akun admin dari database berdasarkan ID tetap (id_user = 10),
    * dan menampilkannya ke dalam field teks di form.
    */
    private void loadAdminData() {
        try {
            Connection conn = Koneksi.getConnection();
            
            // Query untuk mengambil data admin dengan ID tetap (10)
            String sql = "SELECT * FROM users WHERE id_user = 10";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery(); // Eksekusi query dan ambil hasil

            // Jika data ditemukan, tampilkan ke form
            if (rs.next()) {
                textFieldGmailFormAdminAkun.setText(rs.getString("email")); // Set email dari database ke text field
                textFieldKataSandiFormAdminAkun.setText(rs.getString("password")); // Set password dari database ke text field kata sandi
                textFieldKonfirmasiKataSandiFormAdminAkun.setText(rs.getString("password")); // Set password yang sama ke field konfirmasi untuk konsistensi
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal memuat data admin.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnProfilFormAdminAkun = new javax.swing.JButton();
        btnBerandaFormAdminAkun = new javax.swing.JButton();
        btnKelolaDataFormAdminAkun = new javax.swing.JButton();
        btnKelolaDestinasiFormAdminAkun = new javax.swing.JButton();
        btnLaporanFormAdminAkun = new javax.swing.JButton();
        btnKeluarFormAdminAkun = new javax.swing.JButton();
        iconProfilFormAdminAkun = new javax.swing.JLabel();
        labelGmailFormAdminAkun = new javax.swing.JLabel();
        textFieldGmailFormAdminAkun = new javax.swing.JTextField();
        labelKataSandiFormAdminAkun = new javax.swing.JLabel();
        textFieldKataSandiFormAdminAkun = new javax.swing.JTextField();
        labelKonfirmasiKataSandiFormAdminAkun = new javax.swing.JLabel();
        textFieldKonfirmasiKataSandiFormAdminAkun = new javax.swing.JTextField();
        btnUbahFormAdminAkun = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bgFormAdminAkun = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnProfilFormAdminAkun.setForeground(java.awt.Color.white);
        btnProfilFormAdminAkun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/profil icon.png"))); // NOI18N
        btnProfilFormAdminAkun.setBorderPainted(false);
        btnProfilFormAdminAkun.setContentAreaFilled(false);
        btnProfilFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProfilFormAdminAkun.setFocusPainted(false);
        btnProfilFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfilFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnProfilFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, -1, 40));

        btnBerandaFormAdminAkun.setForeground(java.awt.Color.white);
        btnBerandaFormAdminAkun.setText("Beranda");
        btnBerandaFormAdminAkun.setBorderPainted(false);
        btnBerandaFormAdminAkun.setContentAreaFilled(false);
        btnBerandaFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBerandaFormAdminAkun.setFocusPainted(false);
        btnBerandaFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBerandaFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnBerandaFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 47, -1, -1));

        btnKelolaDataFormAdminAkun.setForeground(java.awt.Color.white);
        btnKelolaDataFormAdminAkun.setText("Kelola Data");
        btnKelolaDataFormAdminAkun.setBorderPainted(false);
        btnKelolaDataFormAdminAkun.setContentAreaFilled(false);
        btnKelolaDataFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKelolaDataFormAdminAkun.setFocusPainted(false);
        btnKelolaDataFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKelolaDataFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnKelolaDataFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 80, -1, -1));

        btnKelolaDestinasiFormAdminAkun.setForeground(java.awt.Color.white);
        btnKelolaDestinasiFormAdminAkun.setText("Kelola Destinasi");
        btnKelolaDestinasiFormAdminAkun.setBorderPainted(false);
        btnKelolaDestinasiFormAdminAkun.setContentAreaFilled(false);
        btnKelolaDestinasiFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKelolaDestinasiFormAdminAkun.setFocusPainted(false);
        btnKelolaDestinasiFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKelolaDestinasiFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnKelolaDestinasiFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 112, -1, -1));

        btnLaporanFormAdminAkun.setForeground(java.awt.Color.white);
        btnLaporanFormAdminAkun.setText("Laporan");
        btnLaporanFormAdminAkun.setBorderPainted(false);
        btnLaporanFormAdminAkun.setContentAreaFilled(false);
        btnLaporanFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLaporanFormAdminAkun.setFocusPainted(false);
        btnLaporanFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaporanFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnLaporanFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 146, -1, -1));

        btnKeluarFormAdminAkun.setForeground(java.awt.Color.white);
        btnKeluarFormAdminAkun.setText("Keluar");
        btnKeluarFormAdminAkun.setBorderPainted(false);
        btnKeluarFormAdminAkun.setContentAreaFilled(false);
        btnKeluarFormAdminAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKeluarFormAdminAkun.setFocusPainted(false);
        btnKeluarFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnKeluarFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 360, -1, -1));

        iconProfilFormAdminAkun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/akun gede icon.png"))); // NOI18N
        getContentPane().add(iconProfilFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, -1, -1));

        labelGmailFormAdminAkun.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelGmailFormAdminAkun.setText("Email");
        getContentPane().add(labelGmailFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, -1, -1));
        getContentPane().add(textFieldGmailFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 130, -1));

        labelKataSandiFormAdminAkun.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelKataSandiFormAdminAkun.setText("Kata Sandi");
        getContentPane().add(labelKataSandiFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        textFieldKataSandiFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldKataSandiFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldKataSandiFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 130, -1));

        labelKonfirmasiKataSandiFormAdminAkun.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelKonfirmasiKataSandiFormAdminAkun.setText("Konfirmasi Kata Sandi");
        getContentPane().add(labelKonfirmasiKataSandiFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, -1));
        getContentPane().add(textFieldKonfirmasiKataSandiFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 130, -1));

        btnUbahFormAdminAkun.setBackground(new java.awt.Color(0, 51, 153));
        btnUbahFormAdminAkun.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUbahFormAdminAkun.setForeground(java.awt.Color.white);
        btnUbahFormAdminAkun.setText("Ubah");
        btnUbahFormAdminAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahFormAdminAkunActionPerformed(evt);
            }
        });
        getContentPane().add(btnUbahFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, -1, -1));

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Batal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 70, -1));

        bgFormAdminAkun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Tampilan Profil Admin.png"))); // NOI18N
        getContentPane().add(bgFormAdminAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Aksi saat tombol "Beranda" diklik.
    * Berpindah ke FormAdminBeranda dan menutup form saat ini.
    * 
    * @param evt event klik tombol
    */
    private void btnBerandaFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBerandaFormAdminAkunActionPerformed
        new FormAdminBeranda().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBerandaFormAdminAkunActionPerformed

    /**
    * Aksi saat tombol "Kelola Data" diklik.
    * Berpindah ke FormAdminKelolaData dan menutup form saat ini.
    * 
    * @param evt event klik tombol
    */
    private void btnKelolaDataFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKelolaDataFormAdminAkunActionPerformed
        new FormAdminKelolaData().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKelolaDataFormAdminAkunActionPerformed

    /**
    * Aksi saat tombol "Kelola Destinasi" diklik.
    * Berpindah ke FormAdminKelolaDestinasi dan menutup form saat ini.
    * 
    * @param evt event klik tombol
    */
    private void btnKelolaDestinasiFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKelolaDestinasiFormAdminAkunActionPerformed
        new FormAdminKelolaDestinasi().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKelolaDestinasiFormAdminAkunActionPerformed

    
    /**
     * Aksi saat tombol "Laporan" diklik.
     * Berpindah ke FormAdminLaporan dan menutup form saat ini.
     * 
     * @param evt event klik tombol
     */
    private void btnLaporanFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaporanFormAdminAkunActionPerformed
        new FormAdminLaporan().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLaporanFormAdminAkunActionPerformed

    /**
    * Aksi saat tombol "Keluar" diklik.
    * Mengarahkan kembali ke form login dan menutup form saat ini.
    * 
    * @param evt event klik tombol
    */
    private void btnKeluarFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarFormAdminAkunActionPerformed
        new FormLogin().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKeluarFormAdminAkunActionPerformed

    /**
    * Aksi saat tombol "Profil" diklik.
    * Memuat ulang form FormAdminAkun (efek refresh).
    * 
    * @param evt event klik tombol
    */
    private void btnProfilFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfilFormAdminAkunActionPerformed
        new FormAdminAkun().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnProfilFormAdminAkunActionPerformed
  
    /**
    * Aksi saat tombol "Ubah" diklik.
    * Melakukan validasi field, lalu update email dan password admin ke database.
    * Menampilkan notifikasi berhasil/gagal.
    * 
    * @param evt event klik tombol
    */
    private void btnUbahFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahFormAdminAkunActionPerformed
        // Ambil nilai dari semua text field
        String email = textFieldGmailFormAdminAkun.getText();
        String password = textFieldKataSandiFormAdminAkun.getText();
        String konfirmasi = textFieldKonfirmasiKataSandiFormAdminAkun.getText();

        // Buat validator untuk memeriksa field kosong
        Validator emptyValidator = val -> !val.trim().isEmpty();
        // Buat validator untuk memeriksa kecocokan password
        Validator passwordMatchValidator = val -> val.equals(textFieldKataSandiFormAdminAkun.getText());

        if (!emptyValidator.isValid(email) || 
            !emptyValidator.isValid(password) || 
            !emptyValidator.isValid(konfirmasi)) {
            JOptionPane.showMessageDialog(this, "Seluruh field harus diisi!");
            return;
        }

        if (!passwordMatchValidator.isValid(konfirmasi)) {
            JOptionPane.showMessageDialog(this, "Konfirmasi kata sandi tidak cocok!");
            return;
        }

        try {
            Connection conn = Koneksi.getConnection();
            String sql = "UPDATE users SET email = ?, password = ? WHERE id_user = 10";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, email);
            ps.setString(2, password);
            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Data admin berhasil diperbarui!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal memperbarui data admin.");
            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat update data admin: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUbahFormAdminAkunActionPerformed

    /**
    * Event yang terjadi saat field kata sandi ditekan Enter.
    * Saat ini belum diimplementasikan fungsi khusus.
    * 
    * @param evt event tekan tombol
    */
    private void textFieldKataSandiFormAdminAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldKataSandiFormAdminAkunActionPerformed

    }//GEN-LAST:event_textFieldKataSandiFormAdminAkunActionPerformed

    /**
    * Aksi saat tombol "Batal" diklik.
    * Membatalkan perubahan dan kembali ke FormAdminBeranda.
    * 
    * @param evt event klik tombol
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FormAdminBeranda().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * Metode utama untuk menjalankan FormAdminAkun.
     * 
     * @param args parameter dari command line (tidak digunakan)
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAdminAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAdminAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAdminAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAdminAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(() -> {
            new FormAdminAkun().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgFormAdminAkun;
    private javax.swing.JButton btnBerandaFormAdminAkun;
    private javax.swing.JButton btnKelolaDataFormAdminAkun;
    private javax.swing.JButton btnKelolaDestinasiFormAdminAkun;
    private javax.swing.JButton btnKeluarFormAdminAkun;
    private javax.swing.JButton btnLaporanFormAdminAkun;
    private javax.swing.JButton btnProfilFormAdminAkun;
    private javax.swing.JButton btnUbahFormAdminAkun;
    private javax.swing.JLabel iconProfilFormAdminAkun;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel labelGmailFormAdminAkun;
    private javax.swing.JLabel labelKataSandiFormAdminAkun;
    private javax.swing.JLabel labelKonfirmasiKataSandiFormAdminAkun;
    private javax.swing.JTextField textFieldGmailFormAdminAkun;
    private javax.swing.JTextField textFieldKataSandiFormAdminAkun;
    private javax.swing.JTextField textFieldKonfirmasiKataSandiFormAdminAkun;
    // End of variables declaration//GEN-END:variables
}
